#!/bin/bash

set -eo pipefail

interactive=
tty=
push=
no_tty=
is_admin=

while [ "$1" != "" ]; do
  case "$1" in
    # replicated admin shell alias support
    admin )
      is_admin=1
      ;;
    --no-tty )
      no_tty=1
      ;;
    --help | -h )
      push=$push" $1"
      ;;
    -i | --interactive | --interactive=1 )
      interactive=1
      ;;
    --interactive=0 )
      interactive=0
      ;;
    -t | --tty | --tty=1 )
      tty=1
      ;;
    --tty=0 )
      tty=0
      ;;
    -it | -ti )
      interactive=1
      tty=1
      ;;
    * )
      break
      ;;
  esac
  shift
done

# test if stdin is a terminal
if [ -z "$interactive" ] && [ -z "$tty" ]; then
  if [ -t 0 ]; then
    interactive=1
    tty=1
  elif [ -t 1 ]; then
    interactive=1
  fi
elif [ -z "$tty" ] || [ "$tty" = "0" ]; then
  # if flags explicitly set then use new behavior for no-tty
  no_tty=1
fi

if [ "$is_admin" = 1 ]; then
  if [ "$no_tty" = 1 ]; then
    push=" --no-tty"$push
  fi
  push=" admin"$push
fi

flags=
if [ "$interactive" = "1" ] && [ "$tty" = "1" ]; then
  flags=" -it"
elif [ "$interactive" = "1" ]; then
  flags=" -i"
elif [ "$tty" = "1" ]; then
  flags=" -t"
fi

# do not lose the quotes in arguments
opts=''
for i in "$@"; do
  case "$i" in
    *\'*)
      i=`printf "%s" "$i" | sed "s/'/'\"'\"'/g"`
      ;;
    *) : ;;
  esac
  opts="$opts '$i'"
done

sh -c "sudo docker exec $flags \
  replicated \
  replicatedctl$push $(printf "%s" "$opts")"
